{"version":3,"sources":["components/Header.js","components/Footer.js","utils/scales.ts","controls/Instruments.js","controls/ScaleSelector.js","components/Note.js","components/Fretboard.js","utils/notation.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Header","className","href","Footer","findScale","slug","scales","find","el","instrumentRack","require","getInstrument","inst","Instrument","instrument","handleChange","useState","tuning","setTuning","availableTunings","tunings","name","value","onChange","e","newInstrument","swapInstrument","target","map","key","newTuning","split","tuningDeets","t","swapTuning","ScaleSelector","root","scale","r","s","Note","fretWire","octave","highlightColor","noteName","stringNumber","fretNumber","Fretboard","defaultInstrument","setInstrument","frets","setFrets","strings","stringWidth","stringWidths","setStringWidths","flats","setFlats","setScale","setRoot","inlays","setInlays","scaleNotes","noteSource","rootIndex","sharpNotes","indexOf","flatNotes","scaleType","formula","notesAtRoot","slice","concat","v","i","note","parseInt","makeScale","instString","fret","stringReport","pos","midiNumber","options","Error","Math","floor","midiToNote","highlight","notes","string","length","push","console","log","sw","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fddbce1d.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function Header({ className = \"\" }) {\n  return (\n    <header className={className}>\n      <div>\n        <a href=\"/\">Fretr</a>\n      </div>\n    </header>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer({ className = \"\" }) {\n  return (\n    <footer className={className}>\n      <p>Things everyone always ignores</p>\n    </footer>\n  );\n}\n","import scales from \"./scales.json\";\nimport flatNotes from \"./flatNotes.json\";\nimport sharpNotes from \"./sharpNotes.json\";\n\ninterface scaleInterface {\n  slug: string;\n  name: string;\n  description: string;\n  highlight: number[];\n  formula: string;\n}\n\nexport function findScale(slug: string): scaleInterface | undefined {\n  return scales.find((el) => el.slug === slug);\n}\n\nexport function makeScale(root: string, slug: string): string[] {\n  let flats = false;\n  let noteSource = [];\n  let rootIndex = sharpNotes.indexOf(root);\n  if (rootIndex < 0) {\n    rootIndex = flatNotes.indexOf(root);\n    flats = true;\n  }\n  // now we can set our note source array\n  if (rootIndex >= 0) {\n    noteSource = flats ? flatNotes : sharpNotes;\n  } else {\n    return []; // if our root index is still less than 0, we couldn't find the note and must bail\n  }\n  let scaleType = findScale(slug);\n  const formula = scaleType?.formula || \"1 1 1 1 1 1 1 1 1 1 1 1\";\n\n  let notesAtRoot = noteSource.slice(rootIndex).concat(noteSource);\n\n  const scale = formula.split(\" \").map((v, i) => {\n    const note = notesAtRoot[0];\n    notesAtRoot = notesAtRoot.slice(parseInt(v));\n    return note;\n  });\n\n  return scale;\n}\n","import React, { useState } from \"react\";\n\nexport const instrumentRack = require(\"../utils/instrumentRack.json\");\n\nexport const getInstrument = (slug) => {\n  return instrumentRack.find((inst) => {\n    return inst.slug === slug;\n  });\n};\n\nexport default function Instrument({\n  instrument = \"guitar\",\n  className = \"\",\n  handleChange,\n}) {\n  const [tuning, setTuning] = useState(`${instrument}-standard`);\n\n  const swapInstrument = (newInstrument) => {\n    const inst = getInstrument(newInstrument);\n    setTuning(`${inst.slug}-${inst.tunings[0].slug}`);\n    handleChange({ ...inst, tuning: inst.tunings[0] });\n  };\n\n  const swapTuning = (newTuning) => {\n    const inst = getInstrument(instrument);\n    setTuning(newTuning);\n    const slug = newTuning.split(\"-\")[1];\n    const tuningDeets = inst.tunings.find((t) => t.slug === slug);\n    handleChange({\n      ...inst,\n      tuning: tuningDeets,\n    });\n  };\n\n  const availableTunings = getInstrument(instrument).tunings;\n\n  return (\n    <div className={className}>\n      <label className=\"mr-6\">\n        Instrument\n        <select\n          className=\"border border-gray-600 mr-2 text-xl mx-4\"\n          name=\"instrument\"\n          value={instrument}\n          onChange={(e) => swapInstrument(e.target.value)}\n        >\n          {instrumentRack.map((inst) => (\n            <option key={`instrument-${inst.slug}`} value={inst.slug}>\n              {inst.name}\n            </option>\n          ))}\n        </select>\n      </label>\n      <label className=\"mr-6\">\n        Tuning\n        <select\n          className=\"border border-gray-600 text-xl mx-4\"\n          name=\"tuning\"\n          value={tuning}\n          onChange={(e) => swapTuning(e.target.value)}\n        >\n          {availableTunings.map((t) => (\n            <option\n              key={`instrument-${instrument}-${t.slug}`}\n              value={`${instrument}-${t.slug}`}\n            >\n              {t.name}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n}\n","import React from \"react\";\nimport scales from \"../utils/scales.json\";\n\nexport default function ScaleSelector({\n  root,\n  scale,\n  className,\n  handleChange,\n}) {\n  const rootNotes = [\n    \"C\",\n    \"G\",\n    \"D\",\n    \"A\",\n    \"E\",\n    \"B\",\n    \"F♯\",\n    \"G♭\",\n    \"D♭\",\n    \"A♭\",\n    \"E♭\",\n    \"B♭\",\n    \"F\",\n  ];\n  return (\n    <div className={className}>\n      <label>\n        Root\n        <select\n          className=\"border border-gray-600 mr-2 text-xl mx-4\"\n          name=\"rootNotes\"\n          value={root}\n          onChange={(e) => handleChange({ root: e.target.value, scale })}\n        >\n          {rootNotes.map((r) => (\n            <option key={r} value={r}>\n              {r}\n            </option>\n          ))}\n        </select>\n      </label>\n      <label>\n        Scale\n        <select\n          className=\"border border-gray-600 mr-2 text-xl mx-4\"\n          name=\"scale\"\n          value={scale}\n          onChange={(e) => handleChange({ root, scale: e.target.value })}\n        >\n          {scales.map((s) => (\n            <option key={s.slug} value={s.slug}>\n              {s.name}\n            </option>\n          ))}\n        </select>\n      </label>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Note({\n  fretWire,\n  octave,\n  highlightColor,\n  noteName,\n  stringNumber,\n  fretNumber,\n}) {\n  return (\n    <div\n      className={`note relative text-center p-2 border-gray-600 ${fretWire} octave-${octave} string-${stringNumber} fret-${fretNumber}`}\n    >\n      <div\n        className={`noteName mx-auto w-12 font-bold p-2 rounded-full relative text-base ${highlightColor} note-${noteName}`}\n      >\n        {noteName}\n      </div>\n    </div>\n  );\n}\n","import { findScale, makeScale } from \"../utils/scales\";\nimport { midiToNote } from \"../utils/notation\";\nimport Instrument, { getInstrument } from \"../controls/Instruments\";\nimport React, { useState } from \"react\";\nimport ScaleSelector from \"../controls/ScaleSelector\";\nimport Note from \"./Note\";\n\nexport default function Fretboard({ className = \"\" }) {\n  const defaultInstrument = getInstrument(\"ukulele\");\n\n  const [instrument, setInstrument] = useState(defaultInstrument.slug);\n  const [frets, setFrets] = useState(defaultInstrument.frets);\n  const [tuning, setTuning] = useState(defaultInstrument.tunings[0].strings); // standard GCEA re-entrant tuning for the ukulele\n  const [stringWidths, setStringWidths] = useState(\n    defaultInstrument.tunings[0].stringWidth\n  );\n  const [flats, setFlats] = useState(false);\n  const [scale, setScale] = useState(\"major-blues\");\n  const [root, setRoot] = useState(\"E\");\n  const [inlays, setInlays] = useState(defaultInstrument.inlays);\n\n  const scaleNotes = makeScale(root, scale);\n\n  const note = (instString, fret, stringReport) => {\n    const fretWire = fret === 0 ? \"border-r-4\" : \"border-r\";\n    const { name, octave } = midiToNote(tuning[instString] + fret, { flats });\n\n    const { highlight } = findScale(scale);\n\n    const highlightColor = ((pos) => {\n      if (pos === 0) {\n        return \"bg-green-800 text-white\";\n      } else if (highlight.indexOf(pos) >= 0) {\n        return \"bg-blue-700 text-white\";\n      } else if (pos > 0) {\n        return \"bg-gray-700 text-white\";\n      }\n      return \"bg-transparent text-black opacity-25\";\n    })(scaleNotes.indexOf(name));\n\n    return (\n      <Note\n        key={`${instString}-${fret}`}\n        fretWire={fretWire}\n        octave={octave}\n        highlightColor={highlightColor}\n        noteName={name}\n        fretNumber={fret}\n        stringNumber={stringReport}\n      />\n    );\n  };\n\n  const notes = [];\n\n  for (let fret = 0; fret <= frets; fret++) {\n    // interestingly, fretted instruments count from 0 as well\n    for (let string = 0; string < tuning.length; string++) {\n      // Strings are always numbered starting at string closest to the floor,\n      // which is the opposite way we have them ordered.\n      const stringReport = tuning.length - string;\n      notes.push(note(string, fret, stringReport));\n    }\n  }\n\n  const handleInstrumentChange = ({ slug, inlays, tuning, frets }) => {\n    setInstrument(slug);\n    setInlays(inlays);\n    setFrets(frets);\n    console.log(tuning);\n    setTuning(tuning.strings);\n    setStringWidths(tuning.stringWidth);\n  };\n\n  const handleScaleChange = ({ root, scale }) => {\n    setRoot(root);\n    setScale(scale);\n    if ([\"G♭\", \"D♭\", \"A♭\", \"E♭\", \"B♭\", \"F\"].indexOf(root) >= 0) {\n      setFlats(true);\n    } else {\n      setFlats(false);\n    }\n  };\n\n  return (\n    <div className={className}>\n      <div className=\"options mb-5 flex\">\n        <Instrument\n          className=\"mr-2\"\n          instrument={instrument}\n          handleChange={handleInstrumentChange}\n        />\n        <ScaleSelector\n          root={root}\n          scale={scale}\n          handleChange={handleScaleChange}\n        />\n      </div>\n      <div className={`bg-white grid gap-0 bx-2 strings-${tuning.length}`}>\n        {inlays.map((pos) => (\n          <div\n            className={`relative row-start-1 col-start-${pos + 1} col-end-${\n              pos + 2\n            } row-end-${tuning.length + 1}`}\n          >\n            <div className=\"absolute transform -translate-x-1/2 -translate-y-1/2 -rotate-90 top-1/2 left-1/2 text-4xl leading-none\">\n              {pos === 12 ? \"••\" : \"•\"}\n            </div>\n          </div>\n        ))}\n        {stringWidths.map((sw, i) => (\n          <div\n            key={`string-${i + 1}`}\n            className={`relative string-${i + 1} col-start-1 col-span-${\n              frets + 1\n            }`}\n          >\n            <div\n              className={`absolute top-1/2 left-0 right-0 h-${sw}px -my-${\n                sw / 2\n              }px bg-gray-500 opacity-25`}\n            ></div>\n          </div>\n        ))}\n        {notes}\n      </div>\n    </div>\n  );\n}\n\n/*\n  const tuner = (current, instString) => {\n    return (\n      <div className=\"p-2\" key={`${tuner} - ${instString}`}>\n        <button\n          class=\"mr-2\"\n          onClick={(e) => changeTuning(instString, current - 1)}\n        >\n          ⤺\n        </button>\n        <button onClick={(e) => changeTuning(instString, current + 1)}>\n          ⤻\n        </button>\n      </div>\n    );\n  };\n\n  const changeTuning = (string, newNote) => {\n    const newTuning = [...tuning];\n    newTuning[string] = parseInt(newNote);\n    setTuning(newTuning);\n  };\n  */\n","import sharpNotes from \"./sharpNotes.json\";\nimport flatNotes from \"./flatNotes.json\";\n\ninterface NoteInterface {\n  name: string;\n  octave: number;\n}\n\nexport function noteToMidi(note: NoteInterface): number {\n  const { name, octave } = note;\n  if (octave < 0 || octave > 8) throw Error(`Octave out of range, ${octave}`);\n\n  let noteIndex = sharpNotes.indexOf(name);\n  if (noteIndex < 0) noteIndex = flatNotes.indexOf(name);\n  if (noteIndex < 0) {\n    throw Error(`Not an actual note, ${name}, ${noteIndex}`);\n  }\n\n  // Limit to piano notes, A0 to C8\n  if ((octave === 0 && noteIndex < 9) || (octave === 8 && noteIndex > 0)) {\n    throw Error(`Note out of range, ${name}${octave}`);\n  }\n\n  return 12 + noteIndex + octave * 12;\n}\n\nexport function midiToNote(\n  midiNumber: number,\n  options = { flats: false }\n): NoteInterface {\n  const { flats } = options;\n\n  if (midiNumber < 21 || midiNumber > 108)\n    throw Error(\"Note number out of range \" + midiNumber);\n\n  const octave = Math.floor(midiNumber / 12) - 1;\n  const name = flats ? flatNotes[midiNumber % 12] : sharpNotes[midiNumber % 12];\n\n  return { name, octave };\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Fretboard from \"./components/Fretboard\";\n\nfunction App() {\n  return (\n    <div className=\"absolute inset-0 flex flex-col\">\n      <Header className=\"p-5 bg-black text-white\" />\n      <main className=\"flex-full bg-gray-200\">\n        <Fretboard className=\"p-5 bg-orange-100 border-b border-black\" />\n        <div className=\"editorial p-5 text-xl leading-loose font-serif text-gray-800\">\n          <p className=\"mb-5\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta et\n            reiciendis exercitationem tempore. Debitis minus, dolorem\n            exercitationem officiis optio totam ex adipisci, perspiciatis sed\n            placeat repudiandae quaerat est quae modi! Lorem ipsum dolor sit\n            amet consectetur adipisicing elit. Dicta et reiciendis\n            exercitationem tempore. Debitis minus, dolorem exercitationem\n            officiis optio totam ex adipisci, perspiciatis sed placeat\n            repudiandae quaerat est quae modi!\n          </p>\n          <p className=\"mb-5\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta et\n            reiciendis exercitationem tempore. Debitis minus, dolorem\n            exercitationem officiis optio totam ex adipisci, perspiciatis sed\n            placeat repudiandae quaerat est quae modi!\n          </p>\n          <p className=\"mb-5\">\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Dicta et\n            reiciendis exercitationem tempore. Debitis minus, dolorem\n            exercitationem officiis optio totam ex adipisci, perspiciatis sed\n            placeat repudiandae quaerat est quae modi!\n          </p>\n        </div>\n      </main>\n      <Footer className=\"p-5 bg-black text-white\" />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./css/main.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}